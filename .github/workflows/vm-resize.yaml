name: Scheduled Multi-VM Azure Resize

on:
  schedule:
    # List all up_cron and down_cron values from resize_schedule.yaml
    #- cron: '0 5 * * 6'    # vm1 up
    #- cron: '30 2 * * 1'   # vm1 down
    #- cron: '0 6 * * 0'    # vm2 up
    #- cron: '30 3 * * 2'   # vm2 down
     - cron: '*/5 * * * *'
jobs:
  resize-vms:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Resize VMs based on schedule
        run: |
          - name: Resize VMs based on schedule
  run: |
    pip install pyyaml python-hcl2
    python3 <<EOF
import yaml, os
import hcl2

with open('resize_schedule.yaml') as f:
    schedule = yaml.safe_load(f)

with open('terraform.tfvars', 'r') as f:
    tfvars = hcl2.load(f)

# Now tfvars is a Python dict with your variables
print(tfvars)  # For debugging

current_cron = os.environ.get('GITHUB_EVENT_SCHEDULE', '')

# Example: update vm_size if needed
# tfvars['vm_size'] = 'NewSize'

with open('terraform.auto.tfvars.json', 'w') as f:
    import json
    json.dump(tfvars, f)
EOF
  env:
    GITHUB_EVENT_SCHEDULE: ${{ matrix.cron }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
